name: Mention Commit in Related GitHub Issue by Extracted Jira Key

on:
  push:
    branches:
      - "*" # 모든 브랜치에 대해 트리거

jobs:
  mention_commit_in_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Extract Jira Key from Branch Name
        id: extract_jira_key
        run: |
          # 브랜치 이름에서 Jira 이슈 키 추출 (예: ISN-000-brn 형식)
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          JIRA_KEY=$(echo "$BRANCH_NAME" | grep -oE '^[A-Z]+-[0-9]+')

          # Jira 키가 없으면 종료
          if [ -z "$JIRA_KEY" ]; then
            echo "No Jira Key found in branch name. Skipping update."
            exit 0
          fi

          echo "Found Jira Key: $JIRA_KEY"
          echo "JIRA_KEY=$JIRA_KEY" >> $GITHUB_ENV

      - name: Find GitHub Issue by Jira Key in Title
        if: env.JIRA_KEY != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # GitHub API로 모든 열려 있는 이슈를 가져와 Jira 키가 포함된 제목 찾기
          ISSUE_NUMBER=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "${{ github.api_url }}/repos/${GITHUB_REPOSITORY}/issues?state=open" | \
            jq -r ".[] | select(.title | test(\"\\[$JIRA_KEY\\]\")) | .number")

          # 일치하는 이슈가 없으면 종료
          if [ -z "$ISSUE_NUMBER" ]; then
            echo "No matching GitHub Issue found with Jira Key $JIRA_KEY in title. Skipping comment."
            exit 0
          fi

          echo "Found matching GitHub Issue: #$ISSUE_NUMBER"
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Check for Existing Comment and Add if Not Exists
        if: env.ISSUE_NUMBER != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LAST_COMMIT=$(git log -1 --pretty=format:"%H")
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          COMMENT_BODY="New commit pushed: [$COMMIT_MESSAGE](${{ github.server_url }}/${GITHUB_REPOSITORY}/commit/$LAST_COMMIT)"

          echo "Checking existing comments for GitHub Issue #$ISSUE_NUMBER"

          # 기존 댓글 검색
          EXISTING_COMMENTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "${{ github.api_url }}/repos/${GITHUB_REPOSITORY}/issues/$ISSUE_NUMBER/comments" | jq -r ".[].body")

          # 중복 여부 확인
          if echo "$EXISTING_COMMENTS" | grep -q "$LAST_COMMIT"; then
            echo "Comment for commit $LAST_COMMIT already exists in Issue #$ISSUE_NUMBER. Skipping."
          else
            echo "Adding comment to GitHub Issue #$ISSUE_NUMBER"
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"body\": \"$COMMENT_BODY\"}" \
              "${{ github.api_url }}/repos/${GITHUB_REPOSITORY}/issues/$ISSUE_NUMBER/comments"
          fi

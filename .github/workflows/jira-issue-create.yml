on:
  issues:
    types: [opened]
  push:
    branches:
      - dev

name: Jira Example

jobs:
  build:
    runs-on: ubuntu-latest
    name: Jira Example
    steps:
      - uses: actions/checkout@v4

      - name: Check directory structure
        run: |
          ls -R .github

      # Jira 로그인
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # 로그인 성공 여부 확인
      - name: Confirm Jira Login
        run: echo "Logged into Jira successfully"

      # 이슈 파싱 & Jira 문법으로 변환
      - name: Issue Parser
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      # Jira에 이슈 생성
      # 조건에 따라 Task 또는 Sub-task 생성
      - name: Determine Issue Type
        id: determine_type
        run: |
          if [[ "${{ steps.issue-parser.outputs.issueparser_issuetype }}" == "Sub-task" ]]; then
            echo "issuetype=Sub-task" >> $GITHUB_ENV
            echo "parentKey=${{ steps.issue-parser.outputs.issueparser_parentKey }}" >> $GITHUB_ENV
          else
            echo "issuetype=Task" >> $GITHUB_ENV
          fi

      # Task 생성
      - name: Create Task in Jira
        if: env.issuetype == 'Task'
        uses: atlassian/gajira-create@v3
        id: create_task # ID를 설정하여 이후 참조 가능
        with:
          project: TES
          issuetype: Task
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"

      - name: Create Sub-task in Jira
        if: env.issuetype == 'Sub-task'
        uses: atlassian/gajira-create@v3
        id: create_subtask # ID를 설정하여 이후 참조 가능
        with:
          project: TES
          issuetype: Sub-task
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "parent": {
                "key": "${{ env.parentKey }}"
              }
            }

      # 생성된 이슈의 키를 변수로 설정
      - name: Set Jira Issue Key
        run: |
          ISSUE_KEY="${{ steps.create_task.outputs.issue || steps.create_subtask.outputs.issue }}"
          echo "ISSUE_KEY=$ISSUE_KEY" >> $GITHUB_ENV

      # Jira Issue Key를 사용하여 브랜치 생성 및 업데이트
      - name: Create branch with Ticket number
        run: |
          ISSUE_NUMBER="${{ env.ISSUE_KEY }}"
          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch}}"
          BRANCH_NAME="${ISSUE_NUMBER}-$(echo ${ISSUE_TITLE} | sed 's/ /-/g')"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

      - name: Set up Git user
        run: |
          git config --global user.email "team@jwhg.com"
          git config --global user.name "Team Bot"

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "[${{ env.ISSUE_KEY }}] ${{ github.event.issue.title }}"

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: "create-comment"
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: "Jira Issue Created: [${{ env.ISSUE_KEY }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ env.ISSUE_KEY }})"
      # Jira 컨벤션에 맞추어 브랜치명을 '[TICKET_NUMBER]BRANCH_NAME'로 생성
      - name: Checkout dev code
        uses: actions/checkout@v4
        with:
          ref: dev
